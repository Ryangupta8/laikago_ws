!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIGNED_DEPTH_TO_FRAME_ID	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	15;"	d	file:
ALIGN_DEPTH	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ALIGN_DEPTH    = false;$/;"	m	namespace:realsense2_camera
ALLOW_NO_TEXTURE_POINTS	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ALLOW_NO_TEXTURE_POINTS = false;$/;"	m	namespace:realsense2_camera
AccelGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def AccelGetData(rec_filename):$/;"	f
AccelGetDataDeviceStandStraight	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def AccelGetDataDeviceStandStraight(rec_filename):$/;"	f
BaseRealSenseNode	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    class BaseRealSenseNode : public InterfaceRealSenseNode$/;"	c	namespace:realsense2_camera
BaseRealSenseNode	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^BaseRealSenseNode::BaseRealSenseNode(ros::NodeHandle& nodeHandle,$/;"	f	class:BaseRealSenseNode
COPY	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        enum imu_sync_method{NONE, COPY, LINEAR_INTERPOLATION};$/;"	e	enum:realsense2_camera::BaseRealSenseNode::imu_sync_method
CWaitForMessage	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^class CWaitForMessage:$/;"	c
CimuData	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                CimuData() : m_time(-1) {};$/;"	f	class:realsense2_camera::BaseRealSenseNode::CimuData
CimuData	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                CimuData(const stream_index_pair type, Eigen::Vector3d data, double time):$/;"	f	class:realsense2_camera::BaseRealSenseNode::CimuData
CimuData	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        class CimuData$/;"	c	class:realsense2_camera::BaseRealSenseNode
CreateUnitedMessage	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^sensor_msgs::Imu BaseRealSenseNode::CreateUnitedMessage(const CimuData accel_data, const CimuData gyro_data)$/;"	f	class:BaseRealSenseNode
DEFAULT_ACCEL_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ACCEL_OPTICAL_FRAME_ID   = "camera_accel_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_ALIGNED_DEPTH_TO_COLOR_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ALIGNED_DEPTH_TO_COLOR_FRAME_ID = "camera_aligned_depth_to_color_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_ALIGNED_DEPTH_TO_FISHEYE_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ALIGNED_DEPTH_TO_FISHEYE_FRAME_ID = "camera_aligned_depth_to_fisheye_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_ALIGNED_DEPTH_TO_INFRA1_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ALIGNED_DEPTH_TO_INFRA1_FRAME_ID = "camera_aligned_depth_to_infra1_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_ALIGNED_DEPTH_TO_INFRA2_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ALIGNED_DEPTH_TO_INFRA2_FRAME_ID = "camera_aligned_depth_to_infra2_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_BASE_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_BASE_FRAME_ID            = "camera_link";$/;"	m	namespace:realsense2_camera
DEFAULT_COLOR_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_COLOR_FRAME_ID           = "camera_color_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_COLOR_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_COLOR_OPTICAL_FRAME_ID   = "camera_color_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_DEPTH_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_DEPTH_FRAME_ID           = "camera_depth_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_DEPTH_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_DEPTH_OPTICAL_FRAME_ID   = "camera_depth_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_FILTERS	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_FILTERS                  = "";$/;"	m	namespace:realsense2_camera
DEFAULT_FISHEYE_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_FISHEYE_FRAME_ID         = "camera_fisheye_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_FISHEYE_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_FISHEYE_OPTICAL_FRAME_ID = "camera_fisheye_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_GYRO_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_GYRO_OPTICAL_FRAME_ID    = "camera_gyro_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_IMU_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_IMU_FRAME_ID             = "camera_imu_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_IMU_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_IMU_OPTICAL_FRAME_ID     = "camera_imu_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_INFRA1_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_INFRA1_FRAME_ID          = "camera_infra1_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_INFRA1_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_INFRA1_OPTICAL_FRAME_ID  = "camera_infra1_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_INFRA2_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_INFRA2_FRAME_ID          = "camera_infra2_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_INFRA2_OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_INFRA2_OPTICAL_FRAME_ID  = "camera_infra2_optical_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_ODOM_FRAME_ID	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_ODOM_FRAME_ID            = "odom_frame";$/;"	m	namespace:realsense2_camera
DEFAULT_TOPIC_ODOM_IN	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_TOPIC_ODOM_IN            = "";$/;"	m	namespace:realsense2_camera
DEFAULT_UNITE_IMU_METHOD	realsense-ros/realsense2_camera/include/constants.h	/^    const std::string DEFAULT_UNITE_IMU_METHOD         = "";$/;"	m	namespace:realsense2_camera
ENABLE_COLOR	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_COLOR   = true;$/;"	m	namespace:realsense2_camera
ENABLE_DEPTH	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_DEPTH   = true;$/;"	m	namespace:realsense2_camera
ENABLE_FISHEYE	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_FISHEYE = true;$/;"	m	namespace:realsense2_camera
ENABLE_IMU	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_IMU     = true;$/;"	m	namespace:realsense2_camera
ENABLE_INFRA1	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_INFRA1  = true;$/;"	m	namespace:realsense2_camera
ENABLE_INFRA2	realsense-ros/realsense2_camera/include/constants.h	/^    const bool ENABLE_INFRA2  = true;$/;"	m	namespace:realsense2_camera
Enable	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            void Enable(bool is_enabled) {_is_enabled=is_enabled;};$/;"	f	class:realsense2_camera::SyncedImuPublisher
FLcalfCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FLcalfCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FLfootCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FLfootCallback(const geometry_msgs::WrenchStamped& msg)$/;"	f	class:multiThread
FLhipCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FLhipCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FLthighCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FLthighCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FRAME_ID	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	13;"	d	file:
FRcalfCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FRcalfCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FRfootCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FRfootCallback(const geometry_msgs::WrenchStamped& msg)$/;"	f	class:multiThread
FRhipCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FRhipCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FRthighCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void FRthighCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
FillImuData_Copy	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::FillImuData_Copy(const CimuData imu_data, std::deque<sensor_msgs::Imu>& imu_msgs)$/;"	f	class:BaseRealSenseNode
FillImuData_LinearInterpolation	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::FillImuData_LinearInterpolation(const CimuData imu_data, std::deque<sensor_msgs::Imu>& imu_msgs)$/;"	f	class:BaseRealSenseNode
Force	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    geometry_msgs::Wrench Force;$/;"	m	class:teleForceCmd	file:
FrequencyDiagnostics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^      FrequencyDiagnostics(double expected_frequency, std::string name, std::string hardware_id) :$/;"	f	struct:realsense2_camera::FrequencyDiagnostics
FrequencyDiagnostics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    struct FrequencyDiagnostics$/;"	s	namespace:realsense2_camera
Fx	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
Fx	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
Fx	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    double Fx, Fy, Fz;$/;"	m	class:teleForceCmd	file:
Fy	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
Fy	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
Fy	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    double Fx, Fy, Fz;$/;"	m	class:teleForceCmd	file:
Fz	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
Fz	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            double Fx=0, Fy=0, Fz=0;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
Fz	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    double Fx, Fy, Fz;$/;"	m	class:teleForceCmd	file:
GetForceCallback	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^        void GetForceCallback(const geometry_msgs::WrenchStamped & msg)$/;"	f	class:gazebo::LaikagoDrawForcePlugin
HID_STREAMS	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^    const std::vector<stream_index_pair> HID_STREAMS = {GYRO, ACCEL, POSE};$/;"	m	namespace:realsense2_camera
HOLD_BACK_IMU_FOR_FRAMES	realsense-ros/realsense2_camera/include/constants.h	/^    const bool HOLD_BACK_IMU_FOR_FRAMES = false;$/;"	m	namespace:realsense2_camera
IMAGE_FPS	realsense-ros/realsense2_camera/include/constants.h	/^    const int IMAGE_FPS       = 30;$/;"	m	namespace:realsense2_camera
IMAGE_HEIGHT	realsense-ros/realsense2_camera/include/constants.h	/^    const int IMAGE_HEIGHT    = 480;$/;"	m	namespace:realsense2_camera
IMAGE_STREAMS	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^    const std::vector<stream_index_pair> IMAGE_STREAMS = {DEPTH, INFRA0, INFRA1, INFRA2,$/;"	m	namespace:realsense2_camera
IMAGE_WIDTH	realsense-ros/realsense2_camera/include/constants.h	/^    const int IMAGE_WIDTH     = 640;$/;"	m	namespace:realsense2_camera
IMU_FPS	realsense-ros/realsense2_camera/include/constants.h	/^    const int IMU_FPS         = 0;$/;"	m	namespace:realsense2_camera
ImageColorGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageColorGetData(rec_filename):$/;"	f
ImageColorTest	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageColorTest(data, gt_data):$/;"	f
ImageColorTest_3epsilon	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageColorTest_3epsilon(data, gt_data):$/;"	f
ImageDepthGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageDepthGetData(rec_filename):$/;"	f
ImageDepthGetData_decimation	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageDepthGetData_decimation(rec_filename):$/;"	f
ImageDepthInColorShapeGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageDepthInColorShapeGetData(rec_filename):$/;"	f
ImageGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImageGetData(rec_filename, topic):$/;"	f
ImageListener	realsense-ros/realsense2_camera/scripts/show_center_depth.py	/^class ImageListener:$/;"	c
ImagePublisherWithFrequencyDiagnostics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    typedef std::pair<image_transport::Publisher, std::shared_ptr<FrequencyDiagnostics>> ImagePublisherWithFrequencyDiagnostics;$/;"	t	namespace:realsense2_camera
ImuGetData	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImuGetData(rec_filename, topic):$/;"	f
ImuMessage_AddDefaultValues	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::ImuMessage_AddDefaultValues(sensor_msgs::Imu& imu_msg)$/;"	f	class:BaseRealSenseNode
ImuTest	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def ImuTest(data, gt_data):$/;"	f
InterfaceRealSenseNode	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^    class InterfaceRealSenseNode$/;"	c	namespace:realsense2_camera
KEYCODE_DOWN	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	13;"	d	file:
KEYCODE_LEFT	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	14;"	d	file:
KEYCODE_RIGHT	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	15;"	d	file:
KEYCODE_SPACE	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	16;"	d	file:
KEYCODE_UP	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	12;"	d	file:
Kp	laikago_ros/laikago_real/src/position_mode.cpp	/^float Kp[3] = {0};$/;"	v
Kv	laikago_ros/laikago_real/src/position_mode.cpp	/^float Kv[3] = {0};  $/;"	v
Kv	laikago_ros/laikago_real/src/velocity_mode.cpp	/^float Kv = 0.08;$/;"	v
LINEAR_INTERPOLATION	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        enum imu_sync_method{NONE, COPY, LINEAR_INTERPOLATION};$/;"	e	enum:realsense2_camera::BaseRealSenseNode::imu_sync_method
LaikagoDrawForcePlugin	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^        LaikagoDrawForcePlugin():line(NULL){}$/;"	f	class:gazebo::LaikagoDrawForcePlugin
LaikagoDrawForcePlugin	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^    class LaikagoDrawForcePlugin : public VisualPlugin$/;"	c	namespace:gazebo	file:
LaikagoFootContactPlugin	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^        LaikagoFootContactPlugin() : SensorPlugin(){}$/;"	f	class:gazebo::LaikagoFootContactPlugin
LaikagoFootContactPlugin	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^    class LaikagoFootContactPlugin : public SensorPlugin$/;"	c	namespace:gazebo	file:
LaikagoJointController	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^    class LaikagoJointController: public controller_interface::Controller<hardware_interface::EffortJointInterface>$/;"	c	namespace:laikago_controller
LaikagoJointController	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    LaikagoJointController::LaikagoJointController(){}$/;"	f	class:laikago_controller::LaikagoJointController
LaserScanToPointCloudNodelet	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^class LaserScanToPointCloudNodelet : public nodelet::Nodelet$/;"	c	namespace:pointcloud_to_laserscan
LaserScanToPointCloudNodelet	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^LaserScanToPointCloudNodelet::LaserScanToPointCloudNodelet()$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
Load	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^        void Load(rendering::VisualPtr _parent, sdf::ElementPtr _sdf )$/;"	f	class:gazebo::LaikagoDrawForcePlugin
Load	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^        void Load(sensors::SensorPtr _sensor, sdf::ElementPtr _sdf)$/;"	f	class:gazebo::LaikagoFootContactPlugin
MessageFilter	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^typedef tf2_ros::MessageFilter<sensor_msgs::LaserScan> MessageFilter;$/;"	t	namespace:pointcloud_to_laserscan
MessageFilter	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^typedef tf2_ros::MessageFilter<sensor_msgs::PointCloud2> MessageFilter;$/;"	t	namespace:pointcloud_to_laserscan
NONE	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        enum imu_sync_method{NONE, COPY, LINEAR_INTERPOLATION};$/;"	e	enum:realsense2_camera::BaseRealSenseNode::imu_sync_method
NamedFilter	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            NamedFilter(std::string name, std::shared_ptr<rs2::filter> filter):$/;"	f	class:realsense2_camera::NamedFilter
NamedFilter	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    class NamedFilter$/;"	c	namespace:realsense2_camera
NotImageColorTest	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def NotImageColorTest(data, gt_data):$/;"	f
OPTICAL_FRAME_ID	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	14;"	d	file:
OnUpdate	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^        void OnUpdate()$/;"	f	class:gazebo::LaikagoDrawForcePlugin
OnUpdate	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^        void OnUpdate()$/;"	f	class:gazebo::LaikagoFootContactPlugin	file:
OptionTemperatureDiag	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        typedef std::pair<rs2_option, std::shared_ptr<TemperatureDiagnostics>> OptionTemperatureDiag;$/;"	t	class:realsense2_camera::BaseRealSenseNode
PMSM	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	25;"	d
POINTCLOUD	realsense-ros/realsense2_camera/include/constants.h	/^    const bool POINTCLOUD     = false;$/;"	m	namespace:realsense2_camera
POINTCLOUD_TO_LASERSCAN_LASERSCAN_TO_POINTCLOUD_NODELET_H	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	42;"	d
POINTCLOUD_TO_LASERSCAN_POINTCLOUD_TO_LASERSCAN_NODELET_H	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	42;"	d
PUBLISH_ODOM_TF	realsense-ros/realsense2_camera/include/constants.h	/^    const bool PUBLISH_ODOM_TF = true;$/;"	m	namespace:realsense2_camera
PUBLISH_TF	realsense-ros/realsense2_camera/include/constants.h	/^    const bool PUBLISH_TF        = true;$/;"	m	namespace:realsense2_camera
Pause	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void SyncedImuPublisher::Pause()$/;"	f	class:SyncedImuPublisher
PipelineSyncer	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^	class PipelineSyncer : public rs2::asynchronous_syncer$/;"	c	namespace:realsense2_camera
PointCloudTest	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def PointCloudTest(data, gt_data):$/;"	f
PointCloudToLaserScanNodelet	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^class PointCloudToLaserScanNodelet : public nodelet::Nodelet$/;"	c	namespace:pointcloud_to_laserscan
PointCloudToLaserScanNodelet	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^PointCloudToLaserScanNodelet::PointCloudToLaserScanNodelet()$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
PosStopF	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	26;"	d
PosStopF	laikago_ros/laikago_gazebo/src/body.h	13;"	d
Publish	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void SyncedImuPublisher::Publish(sensor_msgs::Imu imu_msg)$/;"	f	class:SyncedImuPublisher
PublishPendingMessages	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void SyncedImuPublisher::PublishPendingMessages()$/;"	f	class:SyncedImuPublisher
REALSENSE_ROS_EMBEDDED_VERSION_STR	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	18;"	d	file:
REALSENSE_ROS_MAJOR_VERSION	realsense-ros/realsense2_camera/include/constants.h	8;"	d
REALSENSE_ROS_MINOR_VERSION	realsense-ros/realsense2_camera/include/constants.h	9;"	d
REALSENSE_ROS_PATCH_VERSION	realsense-ros/realsense2_camera/include/constants.h	10;"	d
REALSENSE_ROS_VERSION_STR	realsense-ros/realsense2_camera/include/constants.h	15;"	d
RLcalfCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RLcalfCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
RLfootCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RLfootCallback(const geometry_msgs::WrenchStamped& msg)$/;"	f	class:multiThread
RLhipCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RLhipCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
RLthighCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RLthighCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
ROS_DEPTH_SCALE	realsense-ros/realsense2_camera/include/constants.h	/^    const float ROS_DEPTH_SCALE = 0.001;$/;"	m	namespace:realsense2_camera
RRcalfCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RRcalfCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
RRfootCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RRfootCallback(const geometry_msgs::WrenchStamped& msg)$/;"	f	class:multiThread
RRhipCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RRhipCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
RRthighCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void RRthighCallback(const laikago_msgs::MotorState& msg)$/;"	f	class:multiThread
RS400_MM_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS400_MM_PID     = 0x0b00; \/\/ PSR$/;"	m	namespace:realsense2_camera
RS400_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS400_PID        = 0x0ad1; \/\/ PSR$/;"	m	namespace:realsense2_camera
RS405_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS405_PID        = 0x0b0c; \/\/ DS5U$/;"	m	namespace:realsense2_camera
RS410_MM_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS410_MM_PID     = 0x0aff; \/\/ ASR$/;"	m	namespace:realsense2_camera
RS410_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS410_PID        = 0x0ad2; \/\/ ASR$/;"	m	namespace:realsense2_camera
RS415_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS415_PID        = 0x0ad3; \/\/ ASRC$/;"	m	namespace:realsense2_camera
RS420_MM_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS420_MM_PID     = 0x0afe; \/\/ PWGT$/;"	m	namespace:realsense2_camera
RS420_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS420_PID        = 0x0af6; \/\/ PWG$/;"	m	namespace:realsense2_camera
RS430_MM_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS430_MM_PID     = 0x0ad5; \/\/ AWGT$/;"	m	namespace:realsense2_camera
RS430_MM_RGB_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS430_MM_RGB_PID = 0x0b01; \/\/ AWGCT$/;"	m	namespace:realsense2_camera
RS430_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS430_PID        = 0x0ad4; \/\/ AWG$/;"	m	namespace:realsense2_camera
RS435_RGB_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS435_RGB_PID    = 0x0b07; \/\/ AWGC$/;"	m	namespace:realsense2_camera
RS435i_RGB_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS435i_RGB_PID   = 0x0B3A; \/\/ AWGC_MM$/;"	m	namespace:realsense2_camera
RS460_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS460_PID        = 0x0b03; \/\/ DS5U$/;"	m	namespace:realsense2_camera
RS_L515_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS_L515_PID      = 0x0B64; \/\/ $/;"	m	namespace:realsense2_camera
RS_L515_PID_PRE_PRQ	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS_L515_PID_PRE_PRQ = 0x0B3D; \/\/ $/;"	m	namespace:realsense2_camera
RS_T265_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS_T265_PID      = 0x0b37; \/\/ $/;"	m	namespace:realsense2_camera
RS_USB2_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t RS_USB2_PID      = 0x0ad6; \/\/ USB2$/;"	m	namespace:realsense2_camera
RealSenseNodeFactory	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^    class RealSenseNodeFactory : public nodelet::Nodelet$/;"	c	namespace:realsense2_camera
RealSenseNodeFactory	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^RealSenseNodeFactory::RealSenseNodeFactory():$/;"	f	class:RealSenseNodeFactory
RecvHighLCM	laikago_ros/laikago_real/src/walk_mode.cpp	/^HighState RecvHighLCM = {0};$/;"	v
RecvHighROS	laikago_ros/laikago_real/src/walk_mode.cpp	/^laikago_msgs::HighState RecvHighROS;$/;"	v
RecvLowLCM	laikago_ros/laikago_real/src/position_mode.cpp	/^LowState RecvLowLCM = {0};$/;"	v
RecvLowLCM	laikago_ros/laikago_real/src/torque_mode.cpp	/^LowState RecvLowLCM = {0};$/;"	v
RecvLowLCM	laikago_ros/laikago_real/src/velocity_mode.cpp	/^LowState RecvLowLCM = {0};$/;"	v
RecvLowROS	laikago_ros/laikago_real/src/position_mode.cpp	/^laikago_msgs::LowState RecvLowROS;$/;"	v
RecvLowROS	laikago_ros/laikago_real/src/torque_mode.cpp	/^laikago_msgs::LowState RecvLowROS;$/;"	v
RecvLowROS	laikago_ros/laikago_real/src/velocity_mode.cpp	/^laikago_msgs::LowState RecvLowROS;$/;"	v
Resume	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void SyncedImuPublisher::Resume()$/;"	f	class:SyncedImuPublisher
SR300_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t SR300_PID        = 0x0aa5; \/\/ SR300$/;"	m	namespace:realsense2_camera
SR300v2_PID	realsense-ros/realsense2_camera/include/constants.h	/^    const uint16_t SR300v2_PID      = 0x0B48; \/\/ SR305$/;"	m	namespace:realsense2_camera
STREAM_NAME	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	12;"	d	file:
STRINGIFY	realsense-ros/realsense2_camera/include/constants.h	12;"	d
SYNC_FRAMES	realsense-ros/realsense2_camera/include/constants.h	/^    const bool SYNC_FRAMES    = false;$/;"	m	namespace:realsense2_camera
SendHighLCM	laikago_ros/laikago_real/src/walk_mode.cpp	/^HighCmd SendHighLCM = {0};$/;"	v
SendHighROS	laikago_ros/laikago_real/src/walk_mode.cpp	/^laikago_msgs::HighCmd SendHighROS;$/;"	v
SendLowLCM	laikago_ros/laikago_real/src/position_mode.cpp	/^LowCmd SendLowLCM = {0};$/;"	v
SendLowLCM	laikago_ros/laikago_real/src/torque_mode.cpp	/^LowCmd SendLowLCM = {0};$/;"	v
SendLowLCM	laikago_ros/laikago_real/src/velocity_mode.cpp	/^LowCmd SendLowLCM = {0};$/;"	v
SendLowROS	laikago_ros/laikago_real/src/position_mode.cpp	/^laikago_msgs::LowCmd SendLowROS;$/;"	v
SendLowROS	laikago_ros/laikago_real/src/torque_mode.cpp	/^laikago_msgs::LowCmd SendLowROS;$/;"	v
SendLowROS	laikago_ros/laikago_real/src/velocity_mode.cpp	/^laikago_msgs::LowCmd SendLowROS;$/;"	v
ServoCmd	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^}ServoCmd;$/;"	t	typeref:struct:__anon1
SetBaseStream	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::SetBaseStream()$/;"	f	class:BaseRealSenseNode
StartDevice	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^void RealSenseNodeFactory::StartDevice()$/;"	f	class:RealSenseNodeFactory
SyncedImuPublisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            SyncedImuPublisher() {_is_enabled=false;};$/;"	f	class:realsense2_camera::SyncedImuPublisher
SyncedImuPublisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    class SyncedImuPublisher$/;"	c	namespace:realsense2_camera
SyncedImuPublisher	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^SyncedImuPublisher::SyncedImuPublisher(ros::Publisher imu_publisher, std::size_t waiting_list_size):$/;"	f	class:SyncedImuPublisher
T265RealsenseNode	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^    class T265RealsenseNode : public BaseRealSenseNode$/;"	c	namespace:realsense2_camera
T265RealsenseNode	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^T265RealsenseNode::T265RealsenseNode(ros::NodeHandle& nodeHandle,$/;"	f	class:T265RealsenseNode
TF_PUBLISH_RATE	realsense-ros/realsense2_camera/include/constants.h	/^    const double TF_PUBLISH_RATE = 0; \/\/ Static transform$/;"	m	namespace:realsense2_camera
TemperatureDiagnostics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^    class TemperatureDiagnostics$/;"	c	namespace:realsense2_camera
TemperatureDiagnostics	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^TemperatureDiagnostics::TemperatureDiagnostics(std::string name, std::string serial_no)$/;"	f	class:TemperatureDiagnostics
Tpi	laikago_ros/laikago_real/src/position_mode.cpp	/^unsigned long int Tpi = 0;$/;"	v
Tpi	laikago_ros/laikago_real/src/velocity_mode.cpp	/^unsigned long int Tpi =0;$/;"	v
VAR_ARG_STRING	realsense-ros/realsense2_camera/include/constants.h	13;"	d
VelStopF	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	27;"	d
VelStopF	laikago_ros/laikago_gazebo/src/body.h	14;"	d
_JOINT_CONTROLLER_H_	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	7;"	d
_LAIKAGO_CONTROL_TOOL_H_	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	7;"	d
__BODY_H__	laikago_ros/laikago_gazebo/src/body.h	7;"	d
__init__	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def __init__(self, params={}):$/;"	m	class:CWaitForMessage
__init__	realsense-ros/realsense2_camera/scripts/show_center_depth.py	/^    def __init__(self, topic):$/;"	m	class:ImageListener
_align	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, std::shared_ptr<rs2::align>> _align;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_align_depth	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _align_depth;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_allow_no_texture_points	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _allow_no_texture_points;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_angular_velocity_cov	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        double _angular_velocity_cov;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_auto_exposure_roi	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<std::string, rs2::region_of_interest> _auto_exposure_roi;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_base_frame_id	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::string _base_frame_id;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_base_stream	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        stream_index_pair _base_stream;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_camera_info	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, sensor_msgs::CameraInfo> _camera_info;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_camera_time_base	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        double _camera_time_base;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_clipping_distance	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        float _clipping_distance;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_crnt_temp	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            double _crnt_temp;$/;"	m	class:realsense2_camera::TemperatureDiagnostics
_ctx	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        rs2::context _ctx;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_cv	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        mutable std::condition_variable _cv;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_ddynrec	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector<std::shared_ptr<ddynamic_reconfigure::DDynamicReconfigure>> _ddynrec;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_camera_info	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, sensor_msgs::CameraInfo> _depth_aligned_camera_info;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_encoding	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, std::string> _depth_aligned_encoding;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_frame_id	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, std::string> _depth_aligned_frame_id;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_image	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, cv::Mat> _depth_aligned_image;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_image_publishers	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ImagePublisherWithFrequencyDiagnostics> _depth_aligned_image_publishers;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_info_publisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ros::Publisher> _depth_aligned_info_publisher;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_aligned_seq	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, int> _depth_aligned_seq;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_scale_meters	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        float _depth_scale_meters;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_scaled_image	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, cv::Mat> _depth_scaled_image;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_to_other_extrinsics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, rs2_extrinsics> _depth_to_other_extrinsics;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_depth_to_other_extrinsics_publishers	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ros::Publisher> _depth_to_other_extrinsics_publishers;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_dev	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        rs2::device _dev;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_dev_sensors	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector<rs2::sensor> _dev_sensors;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_device	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        rs2::device _device;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_device_type	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        std::string _device_type;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_dynamic_tf_broadcaster	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        tf2_ros::TransformBroadcaster _dynamic_tf_broadcaster;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_enable	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, bool> _enable;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_enabled_profiles	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, std::vector<rs2::stream_profile>> _enabled_profiles;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_encoding	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, std::string> _encoding;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_filter	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            std::shared_ptr<rs2::filter> _filter;$/;"	m	class:realsense2_camera::NamedFilter
_filters	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector<NamedFilter> _filters;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_filters_str	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::string _filters_str;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_format	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, int>        _format;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_fps	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, int> _fps;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_frame_id	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, std::string> _frame_id;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_height	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, int> _height;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_hold_back_imu_for_frames	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool  _hold_back_imu_for_frames;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_image	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, cv::Mat> _image;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_imageColorCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^        def _imageColorCallback(data):$/;"	f	function:CWaitForMessage.imageColorCallback
_image_format	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, int> _image_format;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_image_publishers	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ImagePublisherWithFrequencyDiagnostics> _image_publishers;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_imuCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^        def _imuCallback(data):$/;"	f	function:CWaitForMessage.imuCallback
_imu_publishers	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ros::Publisher> _imu_publishers;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_imu_sync_method	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        imu_sync_method _imu_sync_method;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_info_publisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, ros::Publisher> _info_publisher;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_initial_reset	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        bool _initial_reset;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_is_alive	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        bool _is_alive;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_is_enabled	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            bool                          _is_enabled;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_is_first_frame	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, bool> _is_first_frame;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_is_initialized_time_base	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::atomic_bool _is_initialized_time_base;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_is_running	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _is_running;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_json_file_path	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::string _json_file_path;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_linear_accel_cov	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        double _linear_accel_cov;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_monitor_options	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector<rs2_option> _monitor_options;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_monitoring_t	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::shared_ptr<std::thread> _monitoring_t;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_msg_pointcloud	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        sensor_msgs::PointCloud2 _msg_pointcloud;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_mutex	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            std::mutex                    _mutex;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_name	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            std::string _name;$/;"	m	class:realsense2_camera::NamedFilter
_namespace	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        const std::string _namespace;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_node_handle	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        ros::NodeHandle& _node_handle, _pnh;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_odom_frame_id	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::string _odom_frame_id;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_odom_subscriber	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^            ros::Subscriber _odom_subscriber;$/;"	m	class:realsense2_camera::T265RealsenseNode
_optical_frame_id	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, std::string> _optical_frame_id;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_pause_mode	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            bool                          _pause_mode;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_pending_messages	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            std::queue<sensor_msgs::Imu>  _pending_messages;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_pnh	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        ros::NodeHandle& _node_handle, _pnh;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_pointcloud	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _pointcloud;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_pointcloud_publisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        ros::Publisher _pointcloud_publisher;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_pointcloud_texture	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        stream_index_pair _pointcloud_texture;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_pointscloudCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^        def _pointscloudCallback(data):$/;"	f	function:CWaitForMessage.pointscloudCallback
_publish_odom_tf	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _publish_odom_tf;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_publish_tf	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _publish_tf;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_publisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            ros::Publisher                _publisher;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_query_thread	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        std::thread _query_thread;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_realSenseNode	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        std::unique_ptr<InterfaceRealSenseNode> _realSenseNode;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_ros_time_base	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        ros::Time _ros_time_base;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_sensors	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, rs2::sensor> _sensors;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_sensors_callback	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<std::string, std::function<void(rs2::frame)>> _sensors_callback;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_seq	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, int> _seq;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_serial_no	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::string _serial_no;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_serial_no	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        std::string _serial_no;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_static_tf_broadcaster	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        tf2_ros::StaticTransformBroadcaster _static_tf_broadcaster;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_static_tf_msgs	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector<geometry_msgs::TransformStamped> _static_tf_msgs;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_stream_intrinsics	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, rs2_intrinsics> _stream_intrinsics;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_stream_name	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, std::string> _stream_name;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_sync_frames	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        bool _sync_frames;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_synced_imu_publisher	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::shared_ptr<SyncedImuPublisher> _synced_imu_publisher;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_syncer	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        PipelineSyncer _syncer;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_temperature_nodes	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector< OptionTemperatureDiag > _temperature_nodes;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_tf_publish_rate	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        double _tf_publish_rate;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_tf_t	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::shared_ptr<std::thread> _tf_t;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_unit_step_size	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, int> _unit_step_size;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_updater	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            diagnostic_updater::Updater _updater;$/;"	m	class:realsense2_camera::TemperatureDiagnostics
_usb_port_id	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        std::string _usb_port_id;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
_use_odom_in	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^            bool _use_odom_in;$/;"	m	class:realsense2_camera::T265RealsenseNode
_valid_pc_indices	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::vector< unsigned int > _valid_pc_indices;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_video_functions_stack	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<rs2_stream, std::vector<std::function<void()> > > _video_functions_stack;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_waiting_list_size	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            std::size_t                     _waiting_list_size;$/;"	m	class:realsense2_camera::SyncedImuPublisher
_width	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        std::map<stream_index_pair, int> _width;$/;"	m	class:realsense2_camera::BaseRealSenseNode
_wo_snr	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^            rs2::wheel_odometer _wo_snr;$/;"	m	class:realsense2_camera::T265RealsenseNode
angle_increment_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
angle_max_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
angle_min_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
broadcaster	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^    broadcaster = tf2_ros.StaticTransformBroadcaster()$/;"	v
calcAndPublishStaticTransform	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::calcAndPublishStaticTransform(const stream_index_pair& stream, const rs2::stream_profile& base_profile)$/;"	f	class:BaseRealSenseNode
calcAndPublishStaticTransform	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^void T265RealsenseNode::calcAndPublishStaticTransform(const stream_index_pair& stream, const rs2::stream_profile& base_profile)$/;"	f	class:T265RealsenseNode
callback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def callback(self, data):$/;"	m	class:CWaitForMessage
change_device_callback	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^void RealSenseNodeFactory::change_device_callback(rs2::event_information& info)$/;"	f	class:RealSenseNodeFactory
clip_depth	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::clip_depth(rs2::depth_frame depth_frame, float clipping_dist)$/;"	f	class:BaseRealSenseNode
cloudCb	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^void PointCloudToLaserScanNodelet::cloudCb(const sensor_msgs::PointCloud2ConstPtr& cloud_msg)$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
command	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            realtime_tools::RealtimeBuffer<laikago_msgs::MotorCmd> command;$/;"	m	class:laikago_controller::LaikagoJointController
connectCb	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^void LaserScanToPointCloudNodelet::connectCb()$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
connectCb	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^void PointCloudToLaserScanNodelet::connectCb()$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
connect_mutex_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  boost::mutex connect_mutex_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
connect_mutex_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  boost::mutex connect_mutex_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
contact_namespace	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            std::string contact_namespace;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
controller_state_publisher_	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            boost::scoped_ptr<realtime_tools::RealtimePublisher<laikago_msgs::MotorState> > controller_state_publisher_ ;$/;"	m	class:laikago_controller::LaikagoJointController
cooked	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^struct termios cooked, raw;$/;"	v	typeref:struct:termios
count	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            int count = 0;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
create_graph_resource_name	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^std::string create_graph_resource_name(const std::string &original_name)$/;"	f
diagnostic_updater_	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^      diagnostic_updater::Updater diagnostic_updater_;$/;"	m	struct:realsense2_camera::FrequencyDiagnostics
diagnostics	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void TemperatureDiagnostics::diagnostics(diagnostic_updater::DiagnosticStatusWrapper& status)$/;"	f	class:TemperatureDiagnostics
disconnectCb	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^void LaserScanToPointCloudNodelet::disconnectCb()$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
disconnectCb	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^void PointCloudToLaserScanNodelet::disconnectCb()$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
effortLimits	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::effortLimits(double &effort)$/;"	f	class:laikago_controller::LaikagoJointController
enable_devices	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::enable_devices()$/;"	f	class:BaseRealSenseNode
expected_frequency_	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^      double expected_frequency_;$/;"	m	struct:realsense2_camera::FrequencyDiagnostics
failureCallback	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^void LaserScanToPointCloudNodelet::failureCallback(const sensor_msgs::LaserScanConstPtr& scan_msg,$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
failureCb	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^void PointCloudToLaserScanNodelet::failureCb(const sensor_msgs::PointCloud2ConstPtr& cloud_msg,$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
filename	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^        filename = os.path.join(os.path.dirname(__file__), '_set_cams_info_file.txt')$/;"	v
filename	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^        filename = sys.argv[sys.argv.index('--file')+1]$/;"	v
fix_depth_scale	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^cv::Mat& BaseRealSenseNode::fix_depth_scale(const cv::Mat& from_image, cv::Mat& to_image)$/;"	f	class:BaseRealSenseNode
float3	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        class float3$/;"	c	class:realsense2_camera::BaseRealSenseNode
footForce_sub	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    ros::Subscriber servo_sub[12], footForce_sub[4], imu_sub;$/;"	m	class:multiThread	file:
force	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            geometry_msgs::WrenchStamped force;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
force_pub	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            ros::Publisher force_pub;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
force_pub	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    ros::Publisher force_pub;$/;"	m	class:teleForceCmd	file:
force_sub	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            ros::Subscriber force_sub;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
frame_callback	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::frame_callback(rs2::frame frame)$/;"	f	class:BaseRealSenseNode
frequency_status_	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^      diagnostic_updater::FrequencyStatus frequency_status_;$/;"	m	struct:realsense2_camera::FrequencyDiagnostics
gazebo	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^namespace gazebo$/;"	n	file:
gazebo	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^namespace gazebo$/;"	n	file:
getAProfile	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^rs2::stream_profile BaseRealSenseNode::getAProfile(const stream_index_pair& stream)$/;"	f	class:BaseRealSenseNode
getDevice	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^void RealSenseNodeFactory::getDevice(rs2::device_list list)$/;"	f	class:RealSenseNodeFactory
getEnabledProfile	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^bool BaseRealSenseNode::getEnabledProfile(const stream_index_pair& stream_index, rs2::stream_profile& profile)$/;"	f	class:BaseRealSenseNode
getGains	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::getGains(double &p, double &i, double &d, double &i_max, double &i_min)$/;"	f	class:laikago_controller::LaikagoJointController
getGains	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::getGains(double &p, double &i, double &d, double &i_max, double &i_min, bool &antiwindup)$/;"	f	class:laikago_controller::LaikagoJointController
getImuInfo	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^IMUInfo BaseRealSenseNode::getImuInfo(const stream_index_pair& stream_index)$/;"	f	class:BaseRealSenseNode
getNamespaceStr	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^std::string BaseRealSenseNode::getNamespaceStr()$/;"	f	class:BaseRealSenseNode
getNumSubscribers	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            uint32_t getNumSubscribers() { return _publisher.getNumSubscribers();};$/;"	f	class:realsense2_camera::SyncedImuPublisher
getParameters	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::getParameters()$/;"	f	class:BaseRealSenseNode
get_enum_method	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^std::map<std::string, int> get_enum_method(rs2::options sensor, rs2_option option)$/;"	f
get_tf	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def get_tf(tf_listener, from_id, to_id):$/;"	f
getch	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^def getch():$/;"	f
imageColorCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def imageColorCallback(self, theme_name):$/;"	m	class:CWaitForMessage
imageDepthCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def imageDepthCallback(self, data):$/;"	m	class:CWaitForMessage
imageDepthCallback	realsense-ros/realsense2_camera/scripts/show_center_depth.py	/^    def imageDepthCallback(self, data):$/;"	m	class:ImageListener
imuCallback	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    void imuCallback(const sensor_msgs::Imu & msg)$/;"	f	class:multiThread
imuCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def imuCallback(self, theme_name):$/;"	m	class:CWaitForMessage
imu_callback	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::imu_callback(rs2::frame frame)$/;"	f	class:BaseRealSenseNode
imu_callback_sync	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::imu_callback_sync(rs2::frame frame, imu_sync_method sync_method)$/;"	f	class:BaseRealSenseNode
imu_sub	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    ros::Subscriber servo_sub[12], footForce_sub[4], imu_sub;$/;"	m	class:multiThread	file:
imu_sync_method	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        enum imu_sync_method{NONE, COPY, LINEAR_INTERPOLATION};$/;"	g	class:realsense2_camera::BaseRealSenseNode
inf_epsilon_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double inf_epsilon_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
init	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    bool LaikagoJointController::init(hardware_interface::EffortJointInterface *robot, ros::NodeHandle &n)$/;"	f	class:laikago_controller::LaikagoJointController
initializeOdometryInput	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^void T265RealsenseNode::initializeOdometryInput()$/;"	f	class:T265RealsenseNode
input_queue_size_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  unsigned int input_queue_size_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
input_queue_size_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  unsigned int input_queue_size_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
isValidCharInName	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^bool isValidCharInName(char c)$/;"	f
is_checkbox	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^bool is_checkbox(rs2::options sensor, rs2_option option)$/;"	f
is_enum_option	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^bool is_enum_option(rs2::options sensor, rs2_option option)$/;"	f
is_int_option	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^bool is_int_option(rs2::options sensor, rs2_option option)$/;"	f
is_set	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                bool is_set() {return m_time > 0;};$/;"	f	class:realsense2_camera::BaseRealSenseNode::CimuData
joint	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            hardware_interface::JointHandle joint;$/;"	m	class:laikago_controller::LaikagoJointController
joint_name	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            std::string joint_name;$/;"	m	class:laikago_controller::LaikagoJointController
joint_urdf	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            urdf::JointConstSharedPtr joint_urdf;$/;"	m	class:laikago_controller::LaikagoJointController
keyLoop	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^void teleForceCmd::keyLoop()$/;"	f	class:teleForceCmd
key_idx	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^            key_idx = status_keys.index(kk)$/;"	v
kfd	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^int kfd = 0;$/;"	v
kk	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^        kk = getch()$/;"	v
laikago_controller	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^namespace laikago_controller{$/;"	n
laikago_controller	laikago_ros/laikago_controller/src/joint_controller.cpp	/^namespace laikago_controller {$/;"	n	file:
laikago_model	laikago_ros/laikago_gazebo/src/body.cpp	/^namespace laikago_model {$/;"	n	file:
laikago_model	laikago_ros/laikago_gazebo/src/body.h	/^namespace laikago_model {$/;"	n
lastCmd	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            laikago_msgs::MotorCmd lastCmd;$/;"	m	class:laikago_controller::LaikagoJointController
lastState	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            laikago_msgs::MotorState lastState;$/;"	m	class:laikago_controller::LaikagoJointController
lerp	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^template <typename T> T lerp(const T &a, const T &b, const double t) {$/;"	f
line	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            rendering::DynamicLines *line;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
lowCmd	laikago_ros/laikago_gazebo/src/body.cpp	/^laikago_msgs::LowCmd lowCmd;$/;"	m	namespace:laikago_model	file:
lowState	laikago_ros/laikago_gazebo/src/body.cpp	/^laikago_msgs::LowState lowState;$/;"	m	namespace:laikago_model	file:
m_data	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                Eigen::Vector3d m_data;$/;"	m	class:realsense2_camera::BaseRealSenseNode::CimuData
m_time	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                double          m_time;$/;"	m	class:realsense2_camera::BaseRealSenseNode::CimuData
m_type	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                stream_index_pair m_type;$/;"	m	class:realsense2_camera::BaseRealSenseNode::CimuData
main	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^int main(int argc, char** argv)$/;"	f
main	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^int main(int argc, char **argv)$/;"	f
main	laikago_ros/laikago_real/src/position_mode.cpp	/^int main(int argc, char *argv[])$/;"	f
main	laikago_ros/laikago_real/src/torque_mode.cpp	/^int main(int argc, char *argv[])$/;"	f
main	laikago_ros/laikago_real/src/velocity_mode.cpp	/^int main(int argc, char *argv[])$/;"	f
main	laikago_ros/laikago_real/src/walk_mode.cpp	/^int main(int argc, char *argv[])$/;"	f
main	pointcloud_to_laserscan/src/laserscan_to_pointcloud_node.cpp	/^int main(int argc, char** argv)$/;"	f
main	pointcloud_to_laserscan/src/pointcloud_to_laserscan_node.cpp	/^int main(int argc, char** argv)$/;"	f
main	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^def main():$/;"	f
main	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def main():$/;"	f
main	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^def main():$/;"	f
main	realsense-ros/realsense2_camera/scripts/show_center_depth.py	/^def main():$/;"	f
max_height_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
message_filter_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  boost::shared_ptr<MessageFilter> message_filter_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
message_filter_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  boost::shared_ptr<MessageFilter> message_filter_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
min_height_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
mode	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    uint8_t mode;$/;"	m	struct:__anon1
mode	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^int mode = 1; \/\/ pulsed mode or continuous mode$/;"	v
motion_init	laikago_ros/laikago_gazebo/src/body.cpp	/^void motion_init()$/;"	f	namespace:laikago_model
motiontime	laikago_ros/laikago_real/src/position_mode.cpp	/^static long motiontime = 0;$/;"	v	file:
motiontime	laikago_ros/laikago_real/src/torque_mode.cpp	/^static long motiontime=0;$/;"	v	file:
motiontime	laikago_ros/laikago_real/src/velocity_mode.cpp	/^static long motiontime=0;$/;"	v	file:
motiontime	laikago_ros/laikago_real/src/walk_mode.cpp	/^static long motiontime = 0;$/;"	v	file:
moveAllPosition	laikago_ros/laikago_gazebo/src/body.cpp	/^void moveAllPosition(double* targetPos, double duration)$/;"	f	namespace:laikago_model
movejoint1	laikago_ros/laikago_real/src/position_mode.cpp	/^float movejoint1 = 0, movejoint2 = 0;$/;"	v
movejoint2	laikago_ros/laikago_real/src/position_mode.cpp	/^float movejoint1 = 0, movejoint2 = 0;$/;"	v
multiThread	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    multiThread(){$/;"	f	class:multiThread
multiThread	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^class multiThread$/;"	c	file:
multiple_message_callback	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::multiple_message_callback(rs2::frame frame, imu_sync_method sync_method)$/;"	f	class:BaseRealSenseNode
mutex	laikago_ros/laikago_real/src/position_mode.cpp	/^boost::mutex mutex;$/;"	v
mutex	laikago_ros/laikago_real/src/torque_mode.cpp	/^boost::mutex mutex;$/;"	v
mutex	laikago_ros/laikago_real/src/velocity_mode.cpp	/^boost::mutex mutex;$/;"	v
mutex	laikago_ros/laikago_real/src/walk_mode.cpp	/^boost::mutex mutex;$/;"	v
n	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^    ros::NodeHandle n;$/;"	m	class:teleForceCmd	file:
name_space	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            std::string name_space;$/;"	m	class:laikago_controller::LaikagoJointController
nh_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  ros::NodeHandle nh_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
nh_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  ros::NodeHandle nh_, private_nh_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
nm	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    ros::NodeHandle nm;$/;"	m	class:multiThread	file:
node_name	realsense-ros/realsense2_camera/scripts/show_center_depth.py	/^    node_name = os.path.basename(sys.argv[0]).split('.')[0]$/;"	v
odom_in_callback	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^void T265RealsenseNode::odom_in_callback(const nav_msgs::Odometry::ConstPtr& msg)$/;"	f	class:T265RealsenseNode
onInit	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^void LaserScanToPointCloudNodelet::onInit()$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
onInit	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^void PointCloudToLaserScanNodelet::onInit()$/;"	f	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
onInit	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^void RealSenseNodeFactory::onInit()$/;"	f	class:RealSenseNodeFactory
operator ()	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^		void operator()(rs2::frame f) const$/;"	f	class:realsense2_camera::PipelineSyncer
operator *=	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                float3& operator*=(const float& factor)$/;"	f	class:realsense2_camera::BaseRealSenseNode::float3
operator +=	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                float3& operator+=(const float3& other)$/;"	f	class:realsense2_camera::BaseRealSenseNode::float3
operator <<	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^std::ostream& operator<<(std::ostream& os, const std::map<K, V>& m)$/;"	f	namespace:realsense2_camera
override	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        virtual void publishTopics() override;$/;"	m	class:realsense2_camera::BaseRealSenseNode
override	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^        virtual void registerDynamicReconfigCb(ros::NodeHandle& nh) override;$/;"	m	class:realsense2_camera::BaseRealSenseNode
override	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^        virtual void onInit() override;$/;"	m	class:realsense2_camera::RealSenseNodeFactory
override	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^            void calcAndPublishStaticTransform(const stream_index_pair& stream, const rs2::stream_profile& base_profile) override;$/;"	m	class:realsense2_camera::T265RealsenseNode
paramInit	laikago_ros/laikago_gazebo/src/body.cpp	/^void paramInit()$/;"	f	namespace:laikago_model
parentSensor	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            sensors::ContactSensorPtr parentSensor;      $/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
parse_usb_port	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^std::string RealSenseNodeFactory::parse_usb_port(std::string line)$/;"	f	class:RealSenseNodeFactory
path	realsense-ros/realsense2_description/tests/test_xacro.py	/^path = r.get_path('realsense2_description')$/;"	v
pc2_to_xyzrgb	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^def pc2_to_xyzrgb(point):$/;"	f
pid_controller_	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            control_toolbox::Pid pid_controller_;$/;"	m	class:laikago_controller::LaikagoJointController
pointcloud_to_laserscan	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^namespace pointcloud_to_laserscan$/;"	n
pointcloud_to_laserscan	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^namespace pointcloud_to_laserscan$/;"	n
pointcloud_to_laserscan	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^namespace pointcloud_to_laserscan$/;"	n	file:
pointcloud_to_laserscan	pointcloud_to_laserscan/src/pointcloud_to_laserscan_nodelet.cpp	/^namespace pointcloud_to_laserscan$/;"	n	file:
pointscloudCallback	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def pointscloudCallback(self, theme_name):$/;"	m	class:CWaitForMessage
pos	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    double pos;$/;"	m	struct:__anon1
posStiffness	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    double posStiffness;$/;"	m	struct:__anon1
posStopF	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	14;"	d
pose_callback	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::pose_callback(rs2::frame frame)$/;"	f	class:BaseRealSenseNode
positionLimits	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::positionLimits(double &position)$/;"	f	class:laikago_controller::LaikagoJointController
print_results	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def print_results(results):$/;"	f
print_status	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^def print_status(status):$/;"	f
private_nh_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  ros::NodeHandle private_nh_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
private_nh_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  ros::NodeHandle nh_, private_nh_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
projector_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  laser_geometry::LaserProjection projector_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
pubForce	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^void teleForceCmd::pubForce(double x, double y, double z)$/;"	f	class:teleForceCmd
pub_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  ros::Publisher pub_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
pub_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  ros::Publisher pub_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
publishAlignedDepthToOthers	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishAlignedDepthToOthers(rs2::frameset frames, const ros::Time& t)$/;"	f	class:BaseRealSenseNode
publishDynamicTransforms	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishDynamicTransforms()$/;"	f	class:BaseRealSenseNode
publishFrame	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishFrame(rs2::frame f, const ros::Time& t,$/;"	f	class:BaseRealSenseNode
publishIntrinsics	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishIntrinsics()$/;"	f	class:BaseRealSenseNode
publishPointCloud	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishPointCloud(rs2::points pc, const ros::Time& t, const rs2::frameset& frameset)$/;"	f	class:BaseRealSenseNode
publishStaticTransforms	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishStaticTransforms()$/;"	f	class:BaseRealSenseNode
publishTopics	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publishTopics()$/;"	f	class:BaseRealSenseNode
publishTopics	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^void T265RealsenseNode::publishTopics()$/;"	f	class:T265RealsenseNode
publish_static_tf	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publish_static_tf(const ros::Time& t,$/;"	f	class:BaseRealSenseNode
publish_status	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^def publish_status(broadcaster, status):$/;"	f
publish_temperature	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::publish_temperature()$/;"	f	class:BaseRealSenseNode
quit	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^void quit(int sig)$/;"	f
r	realsense-ros/realsense2_description/tests/test_xacro.py	/^r = rospkg.RosPack()$/;"	v
range_max_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
range_min_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
raw	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^struct termios cooked, raw;$/;"	v	typeref:struct:
readAndSetDynamicParam	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::readAndSetDynamicParam(ros::NodeHandle& nh1, std::shared_ptr<ddynamic_reconfigure::DDynamicReconfigure> ddynrec, $/;"	f	class:BaseRealSenseNode
realsense2_camera	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^namespace realsense2_camera$/;"	n
realsense2_camera	realsense-ros/realsense2_camera/include/constants.h	/^namespace realsense2_camera$/;"	n
realsense2_camera	realsense-ros/realsense2_camera/include/realsense_node_factory.h	/^namespace realsense2_camera$/;"	n
realsense2_camera	realsense-ros/realsense2_camera/include/t265_realsense_node.h	/^namespace realsense2_camera$/;"	n
realsense2_camera	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^namespace realsense2_camera$/;"	n	file:
registerAutoExposureROIOptions	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::registerAutoExposureROIOptions(ros::NodeHandle& nh)$/;"	f	class:BaseRealSenseNode
registerDynamicOption	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::registerDynamicOption(ros::NodeHandle& nh, rs2::options sensor, std::string& module_name)$/;"	f	class:BaseRealSenseNode
registerDynamicReconfigCb	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::registerDynamicReconfigCb(ros::NodeHandle& nh)$/;"	f	class:BaseRealSenseNode
reverse_memcpy	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void reverse_memcpy(unsigned char* dst, const unsigned char* src, size_t n)$/;"	f
roslcm	laikago_ros/laikago_real/src/position_mode.cpp	/^LCM roslcm;$/;"	v
roslcm	laikago_ros/laikago_real/src/torque_mode.cpp	/^LCM roslcm;$/;"	v
roslcm	laikago_ros/laikago_real/src/velocity_mode.cpp	/^LCM roslcm;$/;"	v
roslcm	laikago_ros/laikago_real/src/walk_mode.cpp	/^LCM roslcm;$/;"	v
rosnode	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            ros::NodeHandle* rosnode;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
rosnode	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            ros::NodeHandle* rosnode;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
rotationMatrixToQuaternion	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^tf::Quaternion BaseRealSenseNode::rotationMatrixToQuaternion(const float rotation[9]) const$/;"	f	class:BaseRealSenseNode
rs2_string_to_stream	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^rs2_stream BaseRealSenseNode::rs2_string_to_stream(std::string str)$/;"	f	class:BaseRealSenseNode
rsExtrinsicsToMsg	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^Extrinsics BaseRealSenseNode::rsExtrinsicsToMsg(const rs2_extrinsics& extrinsics, const std::string& frame_id) const$/;"	f	class:BaseRealSenseNode
runFirstFrameInitialization	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::runFirstFrameInitialization(rs2_stream stream_type)$/;"	f	class:BaseRealSenseNode
run_test	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def run_test(test, listener_res):$/;"	f
run_tests	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def run_tests(tests):$/;"	f
run_xacro_in_file	realsense-ros/realsense2_description/tests/test_xacro.py	/^def run_xacro_in_file(filename):$/;"	f
scanCallback	pointcloud_to_laserscan/src/laserscan_to_pointcloud_nodelet.cpp	/^void LaserScanToPointCloudNodelet::scanCallback(const sensor_msgs::LaserScanConstPtr& scan_msg)$/;"	f	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
scan_time_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double min_height_, max_height_, angle_min_, angle_max_, angle_increment_, scan_time_, range_min_, range_max_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
sendServoCmd	laikago_ros/laikago_gazebo/src/body.cpp	/^void sendServoCmd()$/;"	f	namespace:laikago_model
servoCmd	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    ServoCmd servoCmd;$/;"	m	namespace:laikago_controller	file:
servo_pub	laikago_ros/laikago_gazebo/src/body.cpp	/^ros::Publisher servo_pub[12];$/;"	m	namespace:laikago_model	file:
servo_sub	laikago_ros/laikago_gazebo/src/exe/servo.cpp	/^    ros::Subscriber servo_sub[12], footForce_sub[4], imu_sub;$/;"	m	class:multiThread	file:
setBaseTime	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setBaseTime(double frame_time, bool warn_no_metadata)$/;"	f	class:BaseRealSenseNode
setCommandCB	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::setCommandCB(const laikago_msgs::MotorCmdConstPtr& msg)$/;"	f	class:laikago_controller::LaikagoJointController
setGains	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::setGains(const double &p, const double &i, const double &d, const double &i_max, const double &i_min, const bool &antiwindup)$/;"	f	class:laikago_controller::LaikagoJointController
set_auto_exposure_roi	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::set_auto_exposure_roi(const std::string option_name, rs2::sensor sensor, int new_value)$/;"	f	class:BaseRealSenseNode
set_sensor_auto_exposure_roi	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::set_sensor_auto_exposure_roi(rs2::sensor sensor)$/;"	f	class:BaseRealSenseNode
setupDevice	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setupDevice()$/;"	f	class:BaseRealSenseNode
setupErrorCallback	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setupErrorCallback()$/;"	f	class:BaseRealSenseNode
setupFilters	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setupFilters()$/;"	f	class:BaseRealSenseNode
setupPublishers	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setupPublishers()$/;"	f	class:BaseRealSenseNode
setupStreams	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::setupStreams()$/;"	f	class:BaseRealSenseNode
setupSubscribers	realsense-ros/realsense2_camera/src/t265_realsense_node.cpp	/^void T265RealsenseNode::setupSubscribers()$/;"	f	class:T265RealsenseNode
speed	laikago_ros/laikago_real/src/velocity_mode.cpp	/^float speed = 0;$/;"	v
stand	laikago_ros/laikago_gazebo/src/body.cpp	/^void stand()$/;"	f	namespace:laikago_model
startMonitoring	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::startMonitoring()$/;"	f	class:BaseRealSenseNode
starting	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::starting(const ros::Time& time)$/;"	f	class:laikago_controller::LaikagoJointController
staticTFTest	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^def staticTFTest(data, gt_data):$/;"	f
status	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^            status = json.load(open(filename, 'r'))$/;"	v
status	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^        status = {'mode': 'pitch',$/;"	v
status_keys	realsense-ros/realsense2_camera/scripts/set_cams_transforms.py	/^    status_keys = [key[0] for key in status.keys()]$/;"	v
stopping	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::stopping(){}$/;"	f	class:laikago_controller::LaikagoJointController
sub_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  message_filters::Subscriber<sensor_msgs::LaserScan> sub_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
sub_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  message_filters::Subscriber<sensor_msgs::PointCloud2> sub_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
sub_cmd	laikago_ros/laikago_controller/include/laikago_controller/joint_controller.h	/^            ros::Subscriber sub_cmd;$/;"	m	class:laikago_controller::LaikagoJointController
target_frame_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  std::string target_frame_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
target_frame_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  std::string target_frame_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
teleForceCmd	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^class teleForceCmd$/;"	c	file:
teleForceCmd	laikago_ros/laikago_gazebo/src/exe/external_force.cpp	/^teleForceCmd::teleForceCmd()$/;"	f	class:teleForceCmd
test_files	realsense-ros/realsense2_description/tests/test_xacro.py	/^def test_files():$/;"	f
test_types	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^test_types = {'vis_avg': {'listener_theme': 'colorStream',$/;"	v
tf2_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  boost::shared_ptr<tf2_ros::Buffer> tf2_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
tf2_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  boost::shared_ptr<tf2_ros::Buffer> tf2_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
tf2_listener_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  boost::shared_ptr<tf2_ros::TransformListener> tf2_listener_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
tf2_listener_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  boost::shared_ptr<tf2_ros::TransformListener> tf2_listener_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
tf_timeout	realsense-ros/realsense2_camera/scripts/rs2_test.py	/^tf_timeout = 5$/;"	v
toggleSensors	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::toggleSensors(bool enabled)$/;"	f	class:BaseRealSenseNode
tolerance_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  double tolerance_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
topic_name	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            std::string topic_name;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
torque	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    double torque;$/;"	m	struct:__anon1
torque	laikago_ros/laikago_real/src/torque_mode.cpp	/^float torque = 0;$/;"	v
transform_tolerance_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/laserscan_to_pointcloud_nodelet.h	/^  double transform_tolerance_;$/;"	m	class:pointcloud_to_laserscan::LaserScanToPointCloudNodelet
tryGetLogSeverity	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^void RealSenseNodeFactory::tryGetLogSeverity(rs2_log_severity& severity) const$/;"	f	class:RealSenseNodeFactory
unregister_all	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def unregister_all(registers):$/;"	m	class:CWaitForMessage
update	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::update(const ros::Time& time, const ros::Duration& period)$/;"	f	class:laikago_controller::LaikagoJointController
update	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^            void update(double crnt_temperaure)$/;"	f	class:realsense2_camera::TemperatureDiagnostics
update	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^      void update()$/;"	f	struct:realsense2_camera::FrequencyDiagnostics
updateStreamCalibData	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^void BaseRealSenseNode::updateStreamCalibData(const rs2::video_stream_profile& video_profile)$/;"	f	class:BaseRealSenseNode
update_connection	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            event::ConnectionPtr update_connection;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
update_connection	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^            event::ConnectionPtr update_connection;$/;"	m	class:gazebo::LaikagoFootContactPlugin	file:
update_loop	laikago_ros/laikago_real/src/position_mode.cpp	/^void* update_loop(void* data)$/;"	f
update_loop	laikago_ros/laikago_real/src/torque_mode.cpp	/^void* update_loop(void* data)$/;"	f
update_loop	laikago_ros/laikago_real/src/velocity_mode.cpp	/^void* update_loop(void* data)$/;"	f
update_loop	laikago_ros/laikago_real/src/walk_mode.cpp	/^void* update_loop(void* data)$/;"	f
use_inf_	pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet.h	/^  bool use_inf_;$/;"	m	class:pointcloud_to_laserscan::PointCloudToLaserScanNodelet
vel	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    double vel;$/;"	m	struct:__anon1
velStiffness	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	/^    double velStiffness;$/;"	m	struct:__anon1
velStopF	laikago_ros/laikago_controller/include/laikago_controller/laikago_control_tool.h	15;"	d
velocityLimits	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    void LaikagoJointController::velocityLimits(double &velocity)$/;"	f	class:laikago_controller::LaikagoJointController
visual	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            rendering::VisualPtr visual;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
visual_namespace	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^            std::string visual_namespace;$/;"	m	class:gazebo::LaikagoDrawForcePlugin	file:
wait_for_message	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def wait_for_message(self, params, msg_type=msg_Image):$/;"	m	class:CWaitForMessage
wait_for_messages	realsense-ros/realsense2_camera/scripts/rs2_listener.py	/^    def wait_for_messages(self, themes):$/;"	m	class:CWaitForMessage
x	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                float x, y, z;$/;"	m	class:realsense2_camera::BaseRealSenseNode::float3
y	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                float x, y, z;$/;"	m	class:realsense2_camera::BaseRealSenseNode::float3
z	realsense-ros/realsense2_camera/include/base_realsense_node.h	/^                float x, y, z;$/;"	m	class:realsense2_camera::BaseRealSenseNode::float3
~BaseRealSenseNode	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^BaseRealSenseNode::~BaseRealSenseNode()$/;"	f	class:BaseRealSenseNode
~LaikagoDrawForcePlugin	laikago_ros/laikago_gazebo/plugin/draw_force_plugin.cc	/^        ~LaikagoDrawForcePlugin(){$/;"	f	class:gazebo::LaikagoDrawForcePlugin
~LaikagoFootContactPlugin	laikago_ros/laikago_gazebo/plugin/foot_contact_plugin.cc	/^        ~LaikagoFootContactPlugin(){}$/;"	f	class:gazebo::LaikagoFootContactPlugin
~LaikagoJointController	laikago_ros/laikago_controller/src/joint_controller.cpp	/^    LaikagoJointController::~LaikagoJointController(){$/;"	f	class:laikago_controller::LaikagoJointController
~RealSenseNodeFactory	realsense-ros/realsense2_camera/src/realsense_node_factory.cpp	/^RealSenseNodeFactory::~RealSenseNodeFactory()$/;"	f	class:RealSenseNodeFactory
~SyncedImuPublisher	realsense-ros/realsense2_camera/src/base_realsense_node.cpp	/^SyncedImuPublisher::~SyncedImuPublisher()$/;"	f	class:SyncedImuPublisher
